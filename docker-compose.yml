version: '3'
services:
  postgres_db:
    container_name: ds_viz-db
    restart: always
    image: postgres:latest
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks: 
      - ds_viz_network
  
  ds_viz:
    container_name: ds_viz-backend-service
    restart: always
    command: ["uvicorn", "api:app", "--host", "0.0.0.0", "--port", "${DS_VIZ_PORT}"]
    image: ds_viz-fastapi
    ports:
      - "${DS_VIZ_PORT}:${DS_VIZ_PORT}"
    build: .
    expose:
      - "${DS_VIZ_PORT}"
    volumes:
      - ./:/ds_viz/code
    depends_on:
      - postgres_db
    networks: 
      - ds_viz_network

  ai4ef-data-app:
    container_name: ai4ef-data-app
    restart: always
    image: ai4ef-data-app
    build:
      context: .
      dockerfile: Dockerfile
    working_dir: /ds_viz/ai4ef_data_app
    command: ["dagster", "dev", "-h", "0.0.0.0", "-p", "${AI4EF_DATA_APP_PORT}"]
    expose:
      - "${AI4EF_DATA_APP_PORT}"
    ports:
      - "${AI4EF_DATA_APP_PORT}:${AI4EF_DATA_APP_PORT}"
    networks:
      - ds_viz_network
    volumes:
      - dagster-storage:/ds_viz/dagster_storage

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4:latest
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "${PGADMIN_PORT}:80"
    links:
      - "postgres_db:pgsql-server"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
      - ./servers.json:/pgadmin4/servers.json
    networks: 
      - ds_viz_network

  server:
    container_name: data-app-postgrest-service
    image: postgrest/postgrest
    restart: always
    ports:
      - "${POSTGREST_PORT}:3000"
    environment:
      PGRST_DB_URI: ${PGRST_DB_URI}
      PGRST_DB_SCHEMA: ${PGRST_DB_SCHEMA}
      PGRST_DB_ANON_ROLE: ${PGRST_DB_ANON_ROLE}
      PGRST_SERVER_PROXY_URI: ${PGRST_SERVER_PROXY_URI}
      PGRST_OPENAPI_SERVER_PROXY_URI: ${PGRST_OPENAPI_SERVER_PROXY_URI}
    networks:
      - ds_viz_network 

  swagger:
    container_name: data-app-postgrest-swagger-service
    image: swaggerapi/swagger-ui:latest
    restart: always
    ports:
        - "${SWAGGER_PORT}:8080"
    expose:
        - "8080"
    volumes:
      - ./data-app-postgrest-openapi-ro.yaml:/usr/share/nginx/html/data-app-postgrest-openapi-ro.yaml:ro # ro = readOnly
    environment:
        API_URL: ./data-app-postgrest-openapi-ro.yaml

networks: 
  ds_viz_network:
    driver: bridge
    external: true

volumes:
  pgadmin-data:
  postgres_data:
  dagster-storage:
